name: Release Prod Flyway

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  release:
    types: # This configuration does not affect the page_build event above
      - created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-push: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Lint Dockerfiles
        run: |
          hadolint_config=`pwd`/hadolint.config.yml
          docker run --rm -i -v ${hadolint_config}:/.config/hadolint.yaml hadolint/hadolint < images/flyway/Dockerfile
          docker run --rm -i -v ${hadolint_config}:/.config/hadolint.yaml hadolint/hadolint < images/postgres/Dockerfile
      - name: Build Base Docker container with Flyway
        run: |
          sudo docker-compose up -d db
          sleep 5
          sudo docker-compose run flyway
      - name: Build Docker container
        id: build-image
        run: |
          sudo docker build -t $ECR_REGISTRY/gsh/postgres12:prd -f images/postgres/Dockerfile .
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
      - name: Push container to Amazon ECR
        run: docker push $ECR_REGISTRY/gsh/postgres12:prd
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-push
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: UrgentCareKids/database-patient-svc/.github/dev_sync/@v1.0.1
        with:
          url: ${{ secrets.prod_url }}
          user: ${{ secrets.prod_user }}
          password: ${{ secrets.prod_pwd }}
      - run: echo 'deploying'
